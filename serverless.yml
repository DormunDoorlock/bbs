service: bbs
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  region: ap-northeast-2
  stage: ${opt:stage, 'dev'}
  iam:
    role:
      statements: ${file(resources/iamRoleStatements.yml):iamRoleStatements}
  environment:
    STAGE: ${opt:stage, 'dev'}
    TZ: Asia/Seoul
    NODE_PATH: './:/opt/node_modules'
    REGION: ${self:provider.region}
    BBS_TABLE: ${self:custom.bbsTableName}
    BBS_TYPE_GSI: ${self:custom.bbsTypeGsi}
    BBS_REGUSER_GSI: ${self:custom.bbsRegUserGsi}
    BBS_CREATEDAT_GSI: ${self:custom.bbsCreatedAtGsi}

custom:
  stage: ${opt:stage, 'dev'}
  commonLayer: ${cf:bbs-layer-${self:custom.stage}.CommonLayerExport}
  documentation: ${file(resources/documentation.yml)}
  bbsTableName: ${self:custom.stage}-bbs
  bbsTypeGsi: typeGsi
  bbsRegUserGsi: regUserGsi
  bbsCreatedAtGsi: createdAtGsi

package:
  individually: true

functions:
  - ${file(resources/functions.yml)}

resources:
  # query, body parameter validator setting
 # - ${file(../../resources/validator.yml)}
  # gateway response setting
 # - ${file(../../resources/gatewayResponse.yml)}
  # confs dynamodb table setting
  - ${file(resources/dynamodb.yml)}

plugins:
  - serverless-aws-documentation






